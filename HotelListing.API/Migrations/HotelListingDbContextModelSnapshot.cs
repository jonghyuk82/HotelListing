// <auto-generated />
using System;
using HotelListing.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelListing.API.Migrations
{
    [DbContext(typeof(HotelListingDbContext))]
    partial class HotelListingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HotelListing.API.Data.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2bf26677-e991-4986-9f0b-f7776ee3e488"),
                            Name = "Korea",
                            ShortName = "KR"
                        },
                        new
                        {
                            Id = new Guid("edaf5e66-1331-4511-961c-66ba0c783390"),
                            Name = "Jamaica",
                            ShortName = "JM"
                        },
                        new
                        {
                            Id = new Guid("9c419819-985d-41cd-8a63-feb00412c137"),
                            Name = "Bahamas",
                            ShortName = "BS"
                        });
                });

            modelBuilder.Entity("HotelListing.API.Data.Hotel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7a2b42c0-4e45-46ce-9dfb-6cc2bbf545ab"),
                            Address = "Gangjin-gu",
                            CountryId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Walker Hill",
                            Rating = 4.4000000000000004
                        },
                        new
                        {
                            Id = new Guid("30153109-b244-44b7-bcd4-4a25a1f8eb2e"),
                            Address = "Seoul",
                            CountryId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Hilton",
                            Rating = 4.0
                        },
                        new
                        {
                            Id = new Guid("d55b4a2f-dcbc-4543-ba48-9e6a9ba5ca66"),
                            Address = "Jamsil",
                            CountryId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Lotte Hotel",
                            Rating = 5.0
                        });
                });

            modelBuilder.Entity("HotelListing.API.Data.Hotel", b =>
                {
                    b.HasOne("HotelListing.API.Data.Country", "Country")
                        .WithMany("Hotels")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("HotelListing.API.Data.Country", b =>
                {
                    b.Navigation("Hotels");
                });
#pragma warning restore 612, 618
        }
    }
}
